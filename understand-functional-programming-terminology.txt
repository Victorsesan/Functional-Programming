// Function that returns a string representing a cup of green tea
const prepareGreenTea = () => 'greenTea';

// Function that returns a string representing a cup of black tea
const prepareBlackTea = () => 'blackTea';

/*
Given a function (representing the tea type) and number of cups needed, the
following function returns an array of strings (each representing a cup of
a specific type of tea).
*/
const getTea = (prepareTea, numOfCups) => {
  const teaCups = [];

  for(let cups = 1; cups <= numOfCups; cups += 1) {
    const teaCup = prepareTea();
    teaCups.push(teaCup);
  }
  return teaCups;
};

// Only change code below this line
const tea4GreenTeamFCC = getTea(prepareGreenTea, 27);
const tea4BlackTeamFCC = getTea(prepareBlackTea, 13);
// Only change code above this line

//In the solution above we passed in the functions prepareGreenTea() and prepareBlackTea() as parameters or callback functions for the getTea() functions being assigned to our two constant variables tea4BlackTeamFCCand tea4GreenTeamFCC.This way no global variables are changed, and we have the option to add an unlimited number of different choices of prepareTea() methods since it is a callback function being passed to the higher order function of getTea().

console.log(
  tea4GreenTeamFCC,
  tea4BlackTeamFCC
);